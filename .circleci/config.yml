version: 2.1
orbs:
      docker: circleci/docker@0.5.20
      aws-cloudformation: orbss/aws-cloudformation@0.1.6
jobs:
      build_test:
            docker:
            - image: circleci/node:10.16.3
            steps:
            - checkout
            - run:
                  name: update-npm
                  command: 'sudo npm install -g npm@latest'
            - restore_cache:
                  key: dependency-cache-{{ checksum "package-lock.json" }}
            - run:
                  name: install-npm
                  command: npm install
            - save_cache:
                  key: dependency-cache-{{ checksum "package-lock.json" }}
                  paths:
                      - ./node_modules
            - run:
                  name: formatting-check
                  command: npx prettier -c **
            - run:
                  name: static-analysis
                  command: npm run lint
            - run:
                  name: unit-tests
                  command: npm test
      persist_ip:
            working_directory: ~/project/aws
            docker:
            - image: circleci/python:2.7
            steps:
            - run: aws-cli/install
            - run:
                  name: get-ip-and-persist
                  command: echo "export PUBLIC_IP=$(python ./aws/get_ip_of_task.py) >> workspace/env"
            - persist_to_workspace:
                  root: workspace
                  paths:
                  - env
      functional:
            working_directory: ~/project/functional
            docker:
            - image: circleci/python:3.7
            steps:
            - checkout
            - run:
                  name: install-pipenv
                  command: |
                        sudo pip install pipenv
                        pipenv install
            - run:
                  name: run-functional-tests
                  command: pipenv run python -m pytest
      delete_dev:
            working_directory: ~/project/aws
            docker:
            - image: circleci/python:2.7
            steps:
            - checkout
            - aws-cloudformation/delete-stack:
                  stack-name: SpammerV2CI
workflows:
      version: 2
      build_test_push:
            jobs:
            - build_test
            - docker/publish:
                  image: leonpatmore/spammer-v2
                  tag: ${CIRCLE_SHA1}
            - aws-cloudformation/create-stack:
                  stack-name: SpammerV2CI
                  template-file-path: ecs.json
                  requires: 
                  - build_test
                  - docker/publish
            - persist_ip:
                  requires:
                  - aws-cloudformation/create-stack
            - aws-cloudformation/delete-stack:
                  stack-name: SpammerV2CI
                  requires:
                  - create_dev
